// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  email         String       @unique
  name          String?
  image         String?
  emailVerified DateTime?
  courses       Course[]
  masterTable   MasterTable?
  accounts      Account[]
  sessions      Session[]
}

model Course {
  id            Int          @id @default(autoincrement())
  user          User?        @relation(fields: [userId], references: [id])
  userId        String?
  courseCode    String       @unique
  courseName    String? 
  courseTime    String?
  professor     String?
  syllabus      String?
  courseInfo    CourseInfo?
  MasterTable   MasterTable? @relation(fields: [masterTableId], references: [id])
  masterTableId Int?
}

model CourseInfo {
  id                  Int      @id @default(autoincrement())
  credits             Int?
  officeHours         String?
  assignments         Json[]
  schedule            Json[]
  exams               Json[]
  mandatoryAttendance Boolean?
  course              Course   @relation(fields: [courseId], references: [id])
  courseId            Int      @unique
}

model MasterTable {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  courses   Course[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
